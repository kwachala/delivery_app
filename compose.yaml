version: '3.8'

services:
  postgres-restaurant:
    image: postgres:latest
    volumes:
      - postgres-restaurant-data:/var/lib/postgresql/data-restaurant
    environment:
      POSTGRES_DB: restaurantdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    restart: always

  restaurant-app:
    build: ./delivery_app/restaurant
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres-restaurant/restaurantdb
    depends_on:
      - postgres-restaurant
    restart: always

  postgres-deliveries:
    image: postgres:latest
    volumes:
      - postgres-deliveries-data:/var/lib/postgresql/data-deliveries
    environment:
      POSTGRES_DB: deliveriesdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    restart: always

  deliveries-app:
    build: ./delivery_app/deliveries
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql://user:password@postgres-deliveries/deliveriesdb
    depends_on:
      - postgres-deliveries
    restart: always

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  kong-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always

  kong:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_PG_PORT: 5432
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
    depends_on:
      - kong-db
      - kong-migration
    restart: always

  konga:
    image: pantsel/konga:latest
    environment:
      NODE_ENV: production
    ports:
      - "1337:1337"
    restart: always
    depends_on:
      - kong

  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PG_PORT: 5432
    depends_on:
      - kong-db

  kong-init:
    image: postgres:alpine
    depends_on:
      - kong
    volumes:
      - ./init_kong.sh:/docker-entrypoint-initdb.d/init_kong.sh
    entrypoint: [ "/bin/sh", "/docker-entrypoint-initdb.d/init_kong.sh" ]
    environment:
      PGPASSWORD: kong

volumes:
  postgres-restaurant-data:
  postgres-deliveries-data:
  rabbitmq_data:
  kong_data:
